name: "CI/CD Pipeline"
on:
  push:
    branches:
      - master
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'monitoring/grafana-dashboard.json'
      - 'screenshots/**'
    tags-ignore:
      - '*'
  pull_request:
    paths-ignore:
      - '*.md'
      - 'LICENSE'
      - 'data/static/i18n/*.json'
      - 'frontend/src/assets/i18n/*.json'
env:
  NODE_DEFAULT_VERSION: 20
  NODE_OPTIONS: "--max_old_space_size=4096"
  CYCLONEDX_NPM_VERSION: '^2.0.0||^3.0.0'
  EC2_INSTANCE_ID: "i-05274d5ee31f76c57" 
  ECR_REGISTRY_URI: "164104811732.dkr.ecr.us-west-1.amazonaws.com/repo-juice-shop-ecr"
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Use Node.js 20"
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: "Install application minimalistically"
        run: |
          npm install --ignore-scripts
          cd frontend
          npm install --ignore-scripts --legacy-peer-deps
      - name: "Lint source code"
        run: npm run lint
      - name: "Lint customization configs"
        run: >
          npm run lint:config -- -f ./config/7ms.yml &&
          npm run lint:config -- -f ./config/addo.yml &&
          npm run lint:config -- -f ./config/bodgeit.yml &&
          npm run lint:config -- -f ./config/ctf.yml &&
          npm run lint:config -- -f ./config/default.yml &&
          npm run lint:config -- -f ./config/fbctf.yml &&
          npm run lint:config -- -f ./config/juicebox.yml &&
          npm run lint:config -- -f ./config/mozilla.yml &&
          npm run lint:config -- -f ./config/oss.yml &&
          npm run lint:config -- -f ./config/quiet.yml &&
          npm run lint:config -- -f ./config/tutorial.yml &&
          npm run lint:config -- -f ./config/unsafe.yml
  coding-challenge-rsn:
    runs-on: windows-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Use Node.js 20"
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: "Install application"
        run: npm install
      - name: "Check coding challenges for accidental code discrepancies"
        run: npm run rsn
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest] # FIXME: Removed "windows-latest" due to 'Error: ENOENT: no such file or directory, open' error breaking at least on Node 20.0 constantly
        node-version: [18, 20, 21, 22]
    steps:
      - name: "Check out Git repository"
        if: github.repository == 'rakatar/juice-shop' || (github.repository != 'rakatar/juice-shop' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20')
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Use Node.js ${{ matrix.node-version }}"
        if: github.repository == 'rakatar/juice-shop' || (github.repository != 'rakatar/juice-shop' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20')
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: "Install application"
        if: github.repository == 'rakatar/juice-shop' || (github.repository != 'rakatar/juice-shop' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20')
        run: npm install
      - name: "Execute unit tests"
        if: github.repository == 'rakatar/juice-shop' || (github.repository != 'rakatar/juice-shop' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20')
        uses: nick-invision/retry@7152eba30c6575329ac0576536151aca5a72780e #v3.0.0
        with:
          timeout_minutes: 15
          max_attempts: 3
          command: npm test
      - name: "Copy unit test coverage data"
        run: |
          cp build/reports/coverage/frontend-tests/lcov.info frontend-lcov.info
          cp build/reports/coverage/server-tests/lcov.info server-lcov.info
      - name: "Upload unit test coverage data"
        if: github.repository == 'rakatar/juice-shop' && github.event_name == 'push' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b #v4.5.0
        with:
          name: unit-test-lcov
          path: |
            frontend-lcov.info
            server-lcov.info
  api-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20, 21, 22]
    steps:
      - name: "Check out Git repository"
        if: github.repository == 'rakatar/juice-shop' || (github.repository != 'rakatar/juice-shop' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20')
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Use Node.js ${{ matrix.node-version }}"
        if: github.repository == 'rakatar/juice-shop' || (github.repository != 'rakatar/juice-shop' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20')
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ matrix.node-version }}
      - name: "Install application"
        if: github.repository == 'rakatar/juice-shop' || (github.repository != 'rakatar/juice-shop' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20')
        run: npm install
      - name: "Execute integration tests"
        if: github.repository == 'rakatar/juice-shop' || (github.repository != 'rakatar/juice-shop' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20')
        uses: nick-invision/retry@7152eba30c6575329ac0576536151aca5a72780e #v3.0.0
        env:
          NODE_ENV: test
        with:
          timeout_minutes: 5
          max_attempts: 3
          command: npm run frisby
      - name: "Copy API test coverage data"
        run: cp build/reports/coverage/api-tests/lcov.info api-lcov.info
      - name: "Upload API test coverage data"
        if: github.repository == 'rakatar/juice-shop' && github.event_name == 'push' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20'
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b #v4.5.0
        with:
          name: api-test-lcov
          path: |
            api-lcov.info
  custom-config-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Use Node.js 20"
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: "Install application"
        if: github.repository == 'rakatar/juice-shop' || (github.repository != 'rakatar/juice-shop' && matrix.os == 'ubuntu-latest' && matrix.node-version == '20')
        run: npm install
      - name: "Execute server tests for each custom configuration"
        uses: nick-invision/retry@7152eba30c6575329ac0576536151aca5a72780e #v3.0.0
        with:
          timeout_minutes: 30
          max_attempts: 3
          command: >
            NODE_ENV=7ms npm run test:server &&
            NODE_ENV=addo npm run test:server &&
            NODE_ENV=bodgeit npm run test:server &&
            NODE_ENV=ctf npm run test:server &&
            NODE_ENV=fbctf npm run test:server &&
            NODE_ENV=juicebox npm run test:server &&
            NODE_ENV=mozilla npm run test:server &&
            NODE_ENV=oss npm run test:server &&
            NODE_ENV=quiet npm run test:server &&
            NODE_ENV=tutorial npm run test:server &&
            NODE_ENV=unsafe npm run test:server
  smoke-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Use Node.js 20"
        uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af #v4.1.0
        with:
          node-version: ${{ env.NODE_DEFAULT_VERSION }}
      - name: "Install CLI tools"
        run: |
          npm install -g @cyclonedx/cyclonedx-npm@$CYCLONEDX_NPM_VERSION
          npm install -g grunt-cli
      - name: "Set packaging options for Grunt"
        run: |
          echo "PCKG_OS_NAME=linux" >> $GITHUB_ENV
          echo "PCKG_NODE_VERSION=18" >> $GITHUB_ENV
          echo "PCKG_CPU_ARCH=x64" >> $GITHUB_ENV
      - name: "Package application"
        run: |
          npm install --production
          npm run package:ci
      - name: "Unpack application archive"
        run: |
          cd dist
          tar -zxf juice-shop-*.tgz
      - name: "Execute smoke test"
        run: |
          cd dist/juice-shop_*
          npm start &
          cd ../..
          chmod +x test/smoke/smoke-test.sh
          test/smoke/smoke-test.sh http://localhost:3000
  docker-test:
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Execute smoke test on Docker"
        run: docker compose -f docker-compose.test.yml up --exit-code-from sut

  docker:
    on:
  # Trigger only on push to master (which usually happens on merge)
  push:
    branches:
      - master 
    if: github.repository == 'rakatar/juice-shop' && github.event_name == 'push' && (github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/master')
    needs: [test, api-test, custom-config-test, docker-test]
    runs-on: ubuntu-latest
    steps:
      - name: "Check out Git repository"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
      - name: "Set up QEMU"
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf #v3.2.0
      - name: "Set up Docker Buildx"
        uses: docker/setup-buildx-action@6524bf65af31da8d45b59e8c27de4bd072b392f5 #v3.8.0
      - name: "Login to DockerHub"
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 #v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: "Set tag & labels for ${{ github.ref }}"
        run: |
          if [ "$GITHUB_REF" == "refs/heads/master" ]; then
          echo "DOCKER_TAG=latest" >> $GITHUB_ENV
          else
          echo "DOCKER_TAG=snapshot" >> $GITHUB_ENV
          fi
          echo "VCS_REF=`git rev-parse --short HEAD`" >> $GITHUB_ENV
          echo "BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”`" >> $GITHUB_ENV
      - name: "Build and push for AMD64 and ARM64 processors"
        uses: docker/build-push-action@48aba3b46d1b1fec4febb7c5d0c644b249a11355 #v6.1.0
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            bkimminich/juice-shop:${{ env.DOCKER_TAG }}
          build-args: |
            VCS_REF=${{ env.VCS_REF }}
            BUILD_DATE=${{ env.BUILD_DATE }}
            CYCLONEDX_NPM_VERSION=${{ env.CYCLONEDX_NPM_VERSION }}

  docker-build-and-deploy:
    if: github.repository == 'rakatar/juice-shop' && github.event_name == 'push' && github.ref == 'refs/heads/master'
    needs: [lint, coding-challenge-rsn, test, api-test, custom-config-test, smoke-test, docker-test]
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::020473515947:role/GitHubActionsOrchestratorRole
          aws-region: us-west-1
          audience: sts.amazonaws.com

      - name: Verify Orchestrator Role
        run: |
          aws sts get-caller-identity

      - name: Assume cross-account execution role
        id: assume_member_role
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-chaining: true
          role-to-assume: arn:aws:iam::164104811732:role/GitHubActionsExecutionRole
          aws-region: us-west-1

      - name: Verify Execution Role
        run: |
          aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        env:
          AWS_REGION: us-west-1

      - name: Get ECR repository URI
        id: ecr_uri
        run: echo "ECR_REGISTRY_URI=${{ steps.login-ecr.outputs.registry }}/repo-juice-shop-ecr" >> $GITHUB_ENV

      - name: Build and Tag Docker image
        run: |
          docker build -t ${{ env.ECR_REGISTRY_URI }}:${{ github.sha }} .
          docker tag ${{ env.ECR_REGISTRY_URI }}:${{ github.sha }} ${{ env.ECR_REGISTRY_URI }}:latest

      - name: Push Docker image to ECR
        run: |
          docker push ${{ env.ECR_REGISTRY_URI }}:${{ github.sha }}
          docker push ${{ env.ECR_REGISTRY_URI }}:latest

      - name: Trigger EC2 deployment via SSM
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --instance-ids "i-05274d5ee31f76c57" \
            --document-name "AWS-RunShellScript" \
            --parameters "commands=['sudo docker pull ${{ env.ECR_REGISTRY_URI }}:latest', 'sudo docker stop juice-shop-container || true', 'sudo docker rm juice-shop-container || true', 'sudo docker run -d --name juice-shop-container -p 80:3000 ${{ env.ECR_REGISTRY_URI }}:latest']" \
            --comment "Deploy Juice Shop from ECR via GitHub Actions" \
            --region us-west-1 \
            --query 'Command.CommandId' --output text)
          aws ssm wait command-executed --command-id "$COMMAND_ID" --instance-id "i-05274d5ee31f76c57" --region us-west-1

  notify-slack:
    if: github.repository == 'rakatar/juice-shop' && github.event_name == 'push' && (success() || failure())
    needs:
      - docker
      - lint
      - coding-challenge-rsn
      - smoke-test
    runs-on: ubuntu-latest
    steps:
      - name: "Slack workflow notification"
        uses: Gamesight/slack-workflow-status@68bf00d0dbdbcb206c278399aa1ef6c14f74347a #v1.3.0
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}

